{"version":3,"sources":["containers/DefaultLayout.jsx","api/base.js","utils/other.js","containers/index.js","api/index.js"],"names":["withRouter","props","useState","localStorage","getItem","tokens","setToken","sort","setSort","colorArr","useRequest","a","console","log","request","url","method","res","status","data","refreshDeps","loading","useMount","history","push","myMenu","Item","style","textAlign","target","rel","href","onClick","clear","message","success","split","title","colSpan","className","map","item","index","color","arrs","Math","floor","random","length","sorted","headerBordered","overlay","size","xs","sm","md","lg","xl","xxl","src","icon","AntDesignOutlined","marginTop","gutter","wrap","layout","bordered","DefaultLayout","config","instance1","axios","create","baseURL","interceptors","use","err","response","defaults","headers","common"],"mappings":"gWA4IeA,eA/HO,SAACC,GACnB,MAA0BC,mBAASC,aAAaC,QAAQ,UAAxD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAuBJ,mBAAS,IAAhC,mBAAOK,EAAP,KAAYC,EAAZ,KAUMC,EAAW,CAAC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,QAEhE,EAA0BC,YAAU,sBAAC,4BAAAC,EAAA,6DACjCC,QAAQC,IAAI,OADqB,SCxB9BC,YAAQ,CACXC,IAAI,WACJC,OAAO,QDsB0B,OAGf,OADdC,EAF6B,QAG1BC,QACHV,EAAQS,EAAIE,MAJiB,2CAMlC,CACCC,YAAa,CAACf,KAPJgB,GAAd,EAAQF,KAAR,EAAcE,SAUdC,aAAS,WACLV,QAAQC,IAAI,SACZP,EAASH,aAAaC,QAAQ,UACzBD,aAAaC,QAAQ,UACrBH,EAAMsB,QAAQC,KAAK,aAsB5B,IAUMC,EACF,8BACI,kBAAMC,KAAN,CAAmBC,MAAO,CAACC,UAAU,UAArC,SACI,mBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAK,2BAAlD,yDADW,KAKf,kBAAML,KAAN,CAAmBC,MAAO,CAACC,UAAU,UAArC,SACI,mBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAK,yBAAlD,uCADW,KAKf,kBAAML,KAAN,CAAmBC,MAAO,CAACC,UAAU,UAArC,SACI,mBAAGE,IAAI,sBAAsBE,QAvBxB,WACb7B,aAAa8B,QACbhC,EAAMsB,QAAQC,KAAK,UACnBU,EAAA,EAAQC,QAAQ,8BAoBR,uCADW,QAQvB,OACI,eAAC,IAAD,CAASC,MAAM,WAAf,UACI,cAAC,IAAD,CAASC,MAAM,2BAAOC,QAAQ,MAA9B,SACI,qBAAKC,UAAU,WAAf,SACKlB,EAAQ,GAAGd,EAAKiC,KAAI,SAACC,EAAKC,GACvB,OAAO,mBAAiBC,OEjGvBC,EFiGsCnC,EEhGpDmC,EAAKC,KAAKC,MAAOD,KAAKE,UAAUH,EAAKI,OAAO,MFgGxB,SAA4CP,EAAKQ,QAAvCP,GEjGlC,IAAkBE,SFsGb,eAAC,IAAD,CAASP,MAAM,qBAAMa,gBAAc,EAAnC,UACI,mBAAUC,QAAS1B,EAAnB,SACA,mBACIc,UAAU,SACVa,KAAM,CACFC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,IAAK,IAETC,IAAI,mEACJC,KAAM,cAACC,EAAA,EAAD,QAGV,mCACI,eAAC,IAAD,CAASlC,MAAO,CAAEmC,UAAW,GAAKC,OAAQ,CAAC,GAAI,IAAKC,MAAI,EAAxD,UACI,cAAC,IAAD,CAAS1B,QAAS,CAAEe,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAKQ,OAAO,SAASC,UAAQ,EAAlF,iBAGA,cAAC,IAAD,CAAS5B,QAAS,CAAEe,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAKQ,OAAO,SAASC,UAAQ,EAAlF,iBAGA,cAAC,IAAD,CAAS5B,QAAS,CAAEe,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAKQ,OAAO,SAASC,UAAQ,EAAlF,iBAGA,cAAC,IAAD,CAAS5B,QAAS,CAAEe,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAKQ,OAAO,SAASC,UAAQ,EAAlF,+BGhITC,a,gCCFf,wDAKO,SAASrD,EAAQsD,GAEpB,IAAMC,EAAYC,IAAMC,OAAO,CAC3BC,QAAQ,0BAiBZ,OAbAH,EAAUI,aAAa3D,QAAQ4D,KAAI,SAAAN,GAE/B,OAAOA,KACT,SAAAO,OAIFN,EAAUI,aAAaG,SAASF,KAAI,SAAAzD,GAChC,OAAOA,EAAIE,QACb,SAAAwD,OAIKN,EAAUD,GAvBrBE,IAAMO,SAASC,QAAQC,OAAO,WAAa5E,aAAaC,QAAQ","file":"static/js/default.7073844c.chunk.js","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react'\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\r\nimport {Tag, Avatar, Menu,Dropdown,message } from 'antd'\r\nimport ProCard from '@ant-design/pro-card';\r\nimport '@ant-design/pro-card/dist/card.min.css'\r\nimport \"@/style/view-style/default.scss\"\r\nimport {getItem} from \"../utils/other.js\"\r\nimport { AntDesignOutlined } from '@ant-design/icons';\r\nimport {allSort} from \"../api/base\";\r\nimport {useMount,useUpdate,useRequest} from 'ahooks'\r\nimport {set} from \"husky/lib\";\r\n\r\n\r\nconst DefaultLayout = (props) => {\r\n    const [tokens,setToken] = useState(localStorage.getItem(\"token\"));\r\n    const [sort,setSort] = useState([]);\r\n    // const [sort, dispatch] = useReducer((state,action) => {\r\n    //     switch(action.type) {\r\n    //         case 'all':\r\n    //             return action.sorts;\r\n    //         default:\r\n    //             return state;\r\n    //     }\r\n    // },[]);\r\n\r\n    const colorArr = [\"red\",\"blue\",\"green\",\"gold\",\"lime\",\"geekblue\",\"cyan\"];\r\n\r\n    const { data, loading } = useRequest(async() => {\r\n        console.log(\"aaa\")\r\n        let res = await allSort();\r\n        if(res.status === 200){\r\n            setSort(res.data)\r\n        }\r\n    }, {\r\n        refreshDeps: [tokens],\r\n    });\r\n\r\n    useMount(() => {\r\n        console.log(\"mount\")\r\n        setToken(localStorage.getItem(\"token\"));\r\n        if (!localStorage.getItem('token')) {\r\n             props.history.push('/login');\r\n        }\r\n    });\r\n   // useMount( () => {\r\n   //     console.log(\"mount\")\r\n   //     async function fetchData(){\r\n   //     if (!localStorage.getItem('token')) {\r\n   //          props.history.push('/login');\r\n   //          return\r\n   //     }\r\n   //         let res = await allSort();\r\n   //         console.log(res)\r\n   //         if(res.status === 200){\r\n   //             dispatch({\r\n   //                 type:'all',\r\n   //                 sorts:res.data\r\n   //             })\r\n   //         }\r\n   //     }\r\n   //      fetchData()\r\n   //  });\r\n\r\n    const loginOut = () => {\r\n        localStorage.clear()\r\n        props.history.push('/login')\r\n        message.success('登出成功!')\r\n    }\r\n\r\n\r\n    // console.log(sort);\r\n\r\n\r\n    const myMenu = (\r\n        <Menu>\r\n            <Menu.Item key=\"0\" style={{textAlign:\"center\"}}>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\r\n                    进入我的直播间\r\n                </a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"1\" style={{textAlign:\"center\"}}>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\r\n                   个人中心\r\n                </a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" style={{textAlign:\"center\"}}>\r\n                <a rel=\"noopener noreferrer\" onClick={loginOut}>\r\n                    退出登录\r\n                </a>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <ProCard split=\"vertical\">\r\n            <ProCard title=\"分类直播\" colSpan=\"20%\">\r\n                <div className='left-big'>\r\n                    {loading?\"\":sort.map((item,index) => {\r\n                        return <Tag key={index} color={getItem(colorArr)}>{item.sorted}</Tag>\r\n                    })}\r\n\r\n                </div>\r\n            </ProCard>\r\n            <ProCard title=\"直播间\" headerBordered>\r\n                <Dropdown overlay={myMenu}>\r\n                <Avatar\r\n                    className=\"myIcon\"\r\n                    size={{\r\n                        xs: 24,\r\n                        sm: 32,\r\n                        md: 40,\r\n                        lg: 40,\r\n                        xl: 40,\r\n                        xxl: 40 ,\r\n                    }}\r\n                    src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                    icon={<AntDesignOutlined />}\r\n                />\r\n                </Dropdown>\r\n                <>\r\n                    <ProCard style={{ marginTop: 8 }} gutter={[16, 16]} wrap>\r\n                        <ProCard colSpan={{ xs: 24, sm: 8, md: 8, lg: 8, xl: 8 }} layout=\"center\" bordered>\r\n                            Col\r\n                        </ProCard>\r\n                        <ProCard colSpan={{ xs: 24, sm: 8, md: 8, lg: 8, xl: 8 }} layout=\"center\" bordered>\r\n                            Col\r\n                        </ProCard>\r\n                        <ProCard colSpan={{ xs: 24, sm: 8, md: 8, lg: 8, xl: 8 }} layout=\"center\" bordered>\r\n                            Col\r\n                        </ProCard>\r\n                        <ProCard colSpan={{ xs: 24, sm: 8, md: 8, lg: 8, xl: 8 }} layout=\"center\" bordered>\r\n                            Col\r\n                        </ProCard>\r\n                    </ProCard>\r\n                </>\r\n            </ProCard>\r\n        </ProCard>\r\n    )\r\n};\r\n\r\nexport default withRouter(DefaultLayout)\r\n","import {request} from \"./index\";\r\n\r\nexport function allSort() {\r\n    return request({\r\n        url:'/allsort',\r\n        method:'get'\r\n    })\r\n}\r\n","//从数组里面获取一个元素\r\nexport function getItem (arrs){\r\n    return arrs[Math.floor((Math.random()*(arrs.length-1)))];\r\n};\r\n","import DefaultLayout from './DefaultLayout.jsx'\r\n\r\nexport default DefaultLayout\r\n","import axios from 'axios'\n\naxios.defaults.headers.common['th-auth'] = localStorage.getItem(\"token\");\n\n\nexport function request(config){\n\n    const instance1 = axios.create({\n        baseURL:'http://localhost:3002'\n    })\n\n//axios拦截器\n    instance1.interceptors.request.use(config => {\n        // console.log(config);\n        return config;\n    },err => {\n\n    })\n\n    instance1.interceptors.response.use(res => {\n        return res.data\n    },err => {\n\n    })\n\n    return instance1(config)   //返回promis，所以可以在实例后面直接then\n}\n"],"sourceRoot":""}