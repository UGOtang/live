{"version":3,"sources":["api/user.js","views/Register/Register.jsx","views/Register/index.js","api/index.js"],"names":["register","data","request","url","method","sendPhone","phone","login","withRouter","props","useState","loading","setLoading","onFinish","values","a","console","log","then","res","status","message","success","history","push","error","className","style","textAlign","name","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","dependencies","hasFeedback","getFieldValue","validator","_","value","Promise","reject","Error","resolve","fieldProps","size","MobileOutlined","pattern","MailOutlined","captchaProps","phoneName","onGetCaptcha","warning","htmlType","href","Register","config","instance1","axios","create","baseURL","interceptors","use","err","response","defaults","headers","common","localStorage","getItem"],"mappings":"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","file":"static/js/12.46e61208.chunk.js","sourcesContent":["import {request} from \"./index\";\r\n\r\nexport function register(data) {\r\n    return request({\r\n        url:'/users/register',\r\n        method:'post',\r\n        data\r\n    })\r\n}\r\n\r\nexport function sendPhone(data) {\r\n    return request({\r\n        url:\"/users/sendPhone\",\r\n        method: 'post',\r\n        data:{\r\n            phone:data\r\n        }\r\n    })\r\n}\r\n\r\nexport function login(data) {\r\n    return request({\r\n        url:\"/users/login\",\r\n        method:'post',\r\n        data\r\n    })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Layout, Input, Icon, Form, Button, Divider, message, Checkbox } from 'antd'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport ProForm, { ProFormText, ProFormCaptcha } from '@ant-design/pro-form';\r\nimport { MobileOutlined, MailOutlined } from '@ant-design/icons';\r\nimport '@/style/view-style/login.scss'\r\nimport {register,sendPhone} from \"../../api/user\";\r\n\r\nconst waitTime = (time = 100) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(true);\r\n        }, time);\r\n    });\r\n};\r\n\r\nconst Register = props => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onFinish = async (values) => {\r\n        console.log('Received values of form: ', values);\r\n        setLoading(true);\r\n        // setTimeout(() => {\r\n        //     message.success('注册成功!');\r\n        //     props.history.push('/login')\r\n        // }, 2000)\r\n\r\n        await register(values).then(res => {\r\n                console.log(res);\r\n                if(res.status === 200){\r\n                    message.success('注册成功!');\r\n                    props.history.push('/login')\r\n                }else if(res.status === 400){\r\n                    message.error(\"验证码错误\");\r\n                    setLoading(false);\r\n                }else if(res.status === 404){\r\n                    message.error(\"账号已注册\");\r\n                    setLoading(false);\r\n                }else {\r\n                    message.error(\"服务器错误\");\r\n                    setLoading(false);\r\n                }\r\n        })\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <Layout className='login animated fadeIn'>\r\n            <div className='model'>\r\n                <div className='login-form'>\r\n                    <h3 style={{textAlign:\"center\"}}>注册虎鱼号</h3>\r\n                    <Divider />\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: '请输入用户名' }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: '请输入密码' }]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"confirm\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请再次输入密码',\r\n                                },\r\n                                ({ getFieldValue }) => ({\r\n                                    validator(_, value) {\r\n                                        if (!value || getFieldValue('password') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n                                        return Promise.reject(new Error('两次输入密码不一样'));\r\n                                    },\r\n                                }),\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                   type=\"password\"\r\n                                   placeholder=\"请再次输入密码\" />\r\n                        </Form.Item>\r\n\r\n\r\n                        <ProFormText\r\n                            fieldProps={{\r\n                                size: 'middle',\r\n                                prefix: <MobileOutlined />,\r\n                            }}\r\n                            name=\"phone\"\r\n                            placeholder=\"请输入手机号\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入手机号!',\r\n                                },\r\n                                {\r\n                                    pattern: /^1\\d{10}$/,\r\n                                    message: '不合法的手机号格式!',\r\n                                },\r\n                            ]}\r\n                        />\r\n                        <ProFormCaptcha\r\n                            fieldProps={{\r\n                                size: 'middle',\r\n                                prefix: <MailOutlined />,\r\n                            }}\r\n                            captchaProps={{\r\n                                size: 'middle',\r\n                            }}\r\n                            phoneName=\"phone\"\r\n                            name=\"captcha\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入验证码',\r\n                                },\r\n                            ]}\r\n                            placeholder=\"请输入验证码\"\r\n                            onGetCaptcha={async (phone) => {\r\n                                let res = await sendPhone(phone);\r\n                                console.log(res);\r\n                                if(res.status === 200){\r\n                                    message.success(`手机号 ${phone} 验证码发送成功!`);\r\n                                }else {\r\n                                    message.warning(`手机号 ${phone} 验证码发送失败!`)\r\n                                }\r\n                            }}\r\n                        />\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" loading={loading}>\r\n                                注册\r\n                            </Button>\r\n                            或者 <a href=\"/#/login\">登录!</a>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withRouter(Register)\r\n","import Register from './Register.jsx'\r\n\r\nexport default Register\r\n","import axios from 'axios'\n\naxios.defaults.headers.common['th-auth'] = localStorage.getItem(\"token\");\n\n\nexport function request(config){\n\n    const instance1 = axios.create({\n        baseURL:'http://localhost:3002'\n    })\n\n//axios拦截器\n    instance1.interceptors.request.use(config => {\n        // console.log(config);\n        return config;\n    },err => {\n\n    })\n\n    instance1.interceptors.response.use(res => {\n        return res.data\n    },err => {\n\n    })\n\n    return instance1(config)   //返回promis，所以可以在实例后面直接then\n}\n"],"sourceRoot":""}